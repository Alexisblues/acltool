# Makefile.in for acltool
#
# @configure_input@


# Some 'make' variants does not include CPPFLAGS when compiling, some do
.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<


@SET_MAKE@

srcdir = @srcdir@
VPATH = @srcdir@

DESTDIR =
PREFIX = @prefix@

prefix = ${PREFIX}
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@

BINDIR = @bindir@
MANDIR = @mandir@
MAN1DIR = ${MANDIR}/man1


CC = @CC@
CPP = @CPP@

PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@

LIBSMBCLIENT_CFLAGS = @LIBSMBCLIENT_CFLAGS@
LIBSMBCLIENT_LIBS = @LIBSMBCLIENT_LIBS@

READLINE_CFLAGS = @READLINE_CFLAGS@
READLINE_LIBS = @READLINE_LIBS@

INSTALL=@INSTALL@

PACKAGE=@PACKAGE_TARNAME@
VERSION=@PACKAGE_VERSION@

CPPFLAGS = @CPPFLAGS@ -I. -I$(srcdir) $(READLINE_CFLAGS) $(LIBSMBCLIENT_CFLAGS)
CFLAGS = @CFLAGS@ -Wall
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@ $(READLINE_LIBS) $(LIBSMBCLIENT_LIBS)

VALGRIND=valgrind
VALGRINDFLAGS=--leak-check=full --track-origins=yes --error-exitcode=1 # --show-leak-kinds=all 


TESTDIR=t

PROGRAMS=acltool

ACLTOOL_ALIASES=lac sac edac

ACLTOOL_OBJS=gacl.o gacl_impl.o error.o acltool.o argv.o buffer.o aclcmds.o basic.o commands.o misc.o opts.o strings.o range.o common.o cmd_edit.o vfs.o smb.o



all: $(PROGRAMS)


acltool.h:	vfs.h gacl.h argv.h commands.h aclcmds.h basic.h strings.h misc.h opts.h common.h error.h Makefile

acltool.o: 	acltool.c acltool.h smb.h Makefile config.h
aclcmds.o:	aclcmds.c aclcmds.h acltool.h Makefile config.h
cmd_edit.o:	cmd_edit.c acltool.h Makefile config.h

argv.o: 	argv.c argv.h acltool.h Makefile config.h
opts.o: 	opts.c opts.h acltool.h Makefile config.h
basic.o:	basic.c basic.h acltool.h Makefile config.h
commands.o:	commands.c commands.h error.h strings.h acltool.h Makefile config.h
misc.o:		misc.c misc.h acltool.h Makefile config.h

error.o:	error.c error.h Makefile config.h
buffer.o: 	buffer.c buffer.h Makefile config.h
strings.o:	strings.c strings.h Makefile config.h
range.o:	range.c range.h Makefile config.h

vfs.o:		vfs.c vfs.h gacl.h smb.h Makefile config.h
gacl.o:		gacl.c gacl.h gacl_impl.h vfs.h Makefile config.h
gacl_impl.o:	gacl_impl.c gacl_impl.h gacl.h vfs.h nfs4.h Makefile config.h


acltool: $(ACLTOOL_OBJS)
	$(CC) $(LDFLAGS) -o acltool $(ACLTOOL_OBJS) $(LIBS)


# Clean targets
maintainer-clean:
	$(MAKE) -f Makefile.dist distclean

distclean:
	$(MAKE) -f Makefile.dist distclean

clean mostlyclean:
	$(MAKE) -f Makefile.dist clean



# Git targets
push: 	distclean
	git add -A && git commit -a && git push

pull:
	git pull


# Install targets
install-all: install install-man install-aliases

install:  install-bin install-man

install-bin: $(PROGRAMS)
	$(INSTALL) -m 755 -d $(DESTDIR)$(BINDIR)
	$(INSTALL) -m 755 acltool $(DESTDIR)$(BINDIR)
	for A in $(ACLTOOL_ALIASES); do ln -sf acltool "$(DESTDIR)$(BINDIR)/$$A"; done

install-man:  acltool.man
	$(INSTALL) -m 755 -d "$(DESTDIR)$(MAN1DIR)"
	$(INSTALL) -m 644 acltool.man "$(DESTDIR)$(MAN1DIR)/acltool.1"
	if test -f /usr/share/man/man1/cat.1.gz; then \
		gzip -f "$(DESTDIR)$(MAN1DIR)/acltool.1" && \
		for N in $(ACLTOOL_ALIASES); do \
			ln -sf acltool.1.gz $(DESTDIR)$(MAN1DIR)/$$N.1.gz; \
		done; \
	else \
		for N in $(ACLTOOL_ALIASES); do \
			ln -sf acltool.1 $(DESTDIR)$(MAN1DIR)/$$N.1; \
		done; \
	fi

uninstall:
	for F in acltool sac lac edac; do \
		if test -f "$(DESTDIR)$(BINDIR)/$$F"; then rm "$(DESTDIR)$(BINDIR)/$$F"; fi; \
	done
	for F in acltool.1 acltool.1.gz; do \
		if test -f "$(DESTDIR)$(MAN1DIR)/$$F"; then rm "$(DESTDIR)$(MAN1DIR)/$$F"; fi; \
	done


# Check targets
check:
	@$(MAKE) check-`uname -s`

check-macos check-Darwin: check-all

check-freebsd check-FreeBSD: check-all

check-sunos check-solaris check-omnios check-illumos check-SunOS: check-all

check-linux check-Linux:
	-@df -t nfs4 $(TESTDIR) 2>/dev/null && $(MAKE) check-all


CHECKCMD=./acltool
CHECKLOG=/tmp/acltool-checks.log

BASICCHECKS=version echo help pwd cd dir
ACLCHECKS=lac sac touch edac
XATTRCHECKS=sxa lxa rxa



check-all: check-basic check-acl # check-attr (skip for now)

check-basic: acltool
	@for T in $(BASICCHECKS); do $(MAKE) check-$$T; done
	@echo "*** All basic checks passed ***" ; echo ""

check-acl: acltool
	@for T in $(ACLCHECKS); do $(MAKE) check-$$T; done
	@echo "*** All ACL checks passed ***" ; echo ""

check-xattr: acltool
	@for T in $(XATTRCHECKS); do $(MAKE) check-$$T; done
	@echo "*** All XATTR checks passed ***" ; echo ""


check-version: acltool
	@$(CHECKCMD) version >$(CHECKLOG) && echo "acltool version: OK"

check-cd: acltool
	@$(CHECKCMD) cd / >$(CHECKLOG) && echo "acltool cd: OK"

check-pwd: acltool
	@$(CHECKCMD) pwd >$(CHECKLOG) && echo "acltool pwd: OK"

check-help: acltool
	@$(CHECKCMD) help >$(CHECKLOG) && echo "acltool help: OK"

check-config: acltool
	@$(CHECKCMD) config >$(CHECKLOG) && echo "acltool config: OK"

check-echo: acltool
	@$(CHECKCMD) echo foo >$(CHECKLOG) && echo "acltool echo: OK"

check-dir: acltool
	@($(CHECKCMD) dir doc && \
	  $(CHECKCMD) dir -v doc && \
	  $(CHECKCMD) dir -vv doc) >$(CHECKLOG) && echo "acltool dir: OK"


check-lac: acltool
	@($(CHECKCMD) lac t && \
	  $(CHECKCMD) list-access -v t && \
	  $(CHECKCMD) list-access -vv t) >$(CHECKLOG) && echo "acltool list-access: OK"


SACACL1=owner@:all
SACACL2=owner@:all,user:$$USER:all,group@:read_set,everyone@:empty_set
SACACL3=owner@:all,everyone@:empty_set,group@:read_set,user:$$USER:all

check-sac: acltool
	@($(CHECKCMD) sac "$(SACACL1)" t && \
	  $(CHECKCMD) set-access -v "$(SACACL2)" t && \
	  $(CHECKCMD) set-access -vp "$(SACACL3)" t) >$(CHECKLOG) && echo "acltool set-access: OK"

check-touch: acltool
	@($(CHECKCMD) touch  t && \
	  $(CHECKCMD) touch-access -fv t && \
	  $(CHECKCMD) touch-access -vsp t) >$(CHECKLOG) && echo "acltool touch-access: OK"

check-edac: acltool
	@($(CHECKCMD) edac -e "/user:$$USER:.*/p" t && \
	  $(CHECKCMD) edit-access -v -e "/user:$$USER:.*/s user:$$USER:rwx" t && \
	  $(CHECKCMD) edit-access -p -e "/user:$$USER:.*/a user:$$USER:rwx:fd" t && \
	  $(CHECKCMD) edit-access -vp -e "/user:$$USER:.*/d" t) >$(CHECKLOG) && echo "acltool edit-access: OK"

check-sxa: acltool
	@($(CHECKCMD) sxa t acltooltestattr1=foo && \
	  $(CHECKCMD) set-xattr t acltooltestattr2=foo) >$(CHECKLOG) && echo "acltool set-xattr: OK"

check-lxa: acltool
	@($(CHECKCMD) lxa t && \
	  $(CHECKCMD) list-xattr -v t) >$(CHECKLOG) && echo "acltool list-xattr: OK"

check-rxa: acltool
	@($(CHECKCMD) rxa t acltooltestattr1 && \
	  $(CHECKCMD) remove-xattr t acltooltestattr2) >$(CHECKLOG) && echo "acltool remove-xattr: OK"


check-valgrind: acltool
	@$(MAKE) CHECKCMD="$(VALGRIND) $(VALGRINDFLAGS) $(CHECKCMD)" check-all


distcheck: check


DISTROOT=/tmp
DISTDIR=$(DISTROOT)/build-acltool-$(VERSION)

dist:
	rm -fr $(DISTDIR) && \
	  mkdir -p $(DISTDIR) && \
	  cp -r . $(DISTDIR)/acltool-$(VERSION) && \
	  (cd $(DISTDIR)/acltool-$(VERSION) && make -f Makefile.dist distclean) && \
	  (cd $(DISTDIR) && tar --exclude='*/.??*' -zcvf $(DISTROOT)/acltool-$(VERSION).tar.gz acltool-$(VERSION))
	rm -fr $(DISTDIR)
	@echo ""
	@echo "*** Distribution archive saved as: $(DISTROOT)/acltool-$(VERSION).tar.gz"

