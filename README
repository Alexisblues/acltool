ACLTOOL

  This is a tool to manage ACLs - listing, creating, editing, searching, stripping, sorting
  and removing redundant entries and more.

AUTHOR

  Peter Eriksson <pen@lysator.liu.se>


OPERATING SYSTEMS SUPPORTED (for now)

  - FreeBSD (ZFS & NFSv4)
  - Solaris (tested on OmniOS, ZFS & NFSv4)
  - Linux (for NFSv4 only)


BUILD INSTRUCTIONS

  Just type 'make' in the source directory. It will automatically detect and build on:

    - FreeBSD (tested on 11.3 & 12.1)
    - Linux (tested on CentOS 7, Ubuntu 19 & Debian 9)
    - Solaris-based systems (tested on OmniOS)


USAGE

  acltool [<global-options>] [<command> [<options>] [<arguments>]]


OPTIONS

  -h / --help           -       Display usage
  -D / --debug          [<n>]   Debug level
  -v / --verbose        [<n>]   Verbosity level
  -s / --sort           -       Enable sorting
  -m / --merge          -       Enable merging
  -r / --recurse        -       Enable recursion
  -d / --depth          [<n>]   Increase/decrease max depth
  -S / --style          <s>     Select ACL print style
  -n / --no-update      -       Disable modification


COMMANDS

  exit                  [<code>]                Exit (with exit code)
  echo                  [<str>]*                Print some text
  cd                    [<path>]*               Change working directory
  pwd                   -                       Print working directory
  version               -                       Display program version
  config                [<opt>[=<val>]]*        Print/update default configuration
  help                  [<command>]*            Display usage information
  list-access           <path>+                 List ACL(s)
  strip-access          <path>+                 Strip ACL(s)
  sort-access           <path>+                 Sort ACL(s)
  copy-access           <src> <dst>+            Copy ACL(s)
  delete-access         <path>+                 Delete ACL(s)
  set-access            <acl> <path>+           Set ACL(s)
  edit-access           <path>+                 Edit ACL(s)
  find-access           <acl> <path>+           Search ACL(s)
  get-access            <var>=<path>+           Assign ACL(s) to variable(s)

  Acltool can either be used directly from the command line or by entering a CLI mode by starting 
  it without any arguments (sans any global options).

  You can access environmental variables using ${NAME} (or $N if one-character names).
  
  All commands and long option names can be abbreviated using the parts of the names. 
  Some examples of valid abbreviations:

    list-access, list-a, list, l-ac, lac, liac
    edit-access, edit-a, edit, e-ac, edac
    set-access, set-acc, set, s-a, sac

  Tab-completion in CLI mode also works for command names, long options and files.
  
  Command names may also be used in links to the "acltool" binary like "ln -s acltool lac" and
  then be used as shortcuts to the commands.
  

ACL PRINT STYLES
  default         FreeBSD-style
  verbose	  A more verbose version of FreeBSD
  brief		  A one-line version
  csv		  A CSV-styl one-line version
  solaris	  Solaris-style
  primos	  Prime/PRIMOS-style
  samba		  Samba-style
  icacls	  Windows ICACLS-style


MORE INFORMATION

  See the information in the "doc" subdirectory.


EXAMPLES

  edit-access -r user:peter86:rwx:f:allow dir
    Recursively set the ACE on all objects

  edit-access -r +peter86:rwx:f:allow dir
    Recursively add permissions & flags "rwx:f" to all existing peter86:*:*:allow ACEs
    
  edit-access -r -peter86:rwx:f:allow dir
    Recursively remove permission & flags "rwx:f" from all existing peter86:*:*:allow ACEs
    
  edit-access -r =user:peter86:rwx:f:allow dir
    Recursively replace permission & flags "rwx:f" on all existing peter86:*:*:allow ACEs
    
  edit-access -r ^user:peter86:rwx:f:allow dir
    Recursively set the ACE on all objects that does _not_ have a 'peter86:*:*:allow' ACE already


Not Implemented Yet (format may change):

  edit-access [/+parst38:rwx/]user:peter86:rwx:f:allow dir
  
    Replace all parst38-allow entries where rwx permissions is
    set with 'user:peter86:rwx:f:allow'


  edit-access [2d]user:peter86:rwx:f:allow dir
  
    Replace entry #2 with "user:peter86:rwx:f:allow


  edit-access [2]user:peter86:rwx:f:allow dir

    Insert entry at #2 with "user:peter86:rwx:f:allow


  edit-access [2d] dir
  
    Delete entry #2
